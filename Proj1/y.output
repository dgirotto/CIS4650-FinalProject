State 59 conflicts: 1 shift/reduce
State 121 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 $@1: /* empty */

    7 var_declaration: error ID $@1 SEMI

    8 $@2: /* empty */

    9 var_declaration: type_specifier ID $@2 SEMI

   10 $@3: /* empty */

   11 $@4: /* empty */

   12 var_declaration: type_specifier ID $@3 LSQ NUM $@4 RSQ SEMI

   13 type_specifier: INT
   14               | VOID

   15 $@5: /* empty */

   16 fun_declaration: error ID $@5 LPAREN params RPAREN compound_stmt

   17 $@6: /* empty */

   18 fun_declaration: type_specifier ID $@6 LPAREN params RPAREN compound_stmt

   19 params: /* empty */
   20       | param_list
   21       | VOID

   22 param_list: param_list param
   23           | param_list COMMA param
   24           | param

   25 param: type_specifier ID

   26 $@7: /* empty */

   27 param: type_specifier ID $@7 LSQ RSQ

   28 compound_stmt: LCURLY local_declarations statement_list RCURLY

   29 local_declarations: /* empty */
   30                   | local_declarations var_declaration

   31 statement_list: /* empty */
   32               | statement_list statement

   33 statement: expression_stmt
   34          | compound_stmt
   35          | selection_stmt
   36          | iteration_stmt
   37          | return_stmt

   38 expression_stmt: expression SEMI
   39                | SEMI

   40 selection_stmt: IF LPAREN expression RPAREN statement
   41               | IF LPAREN expression RPAREN statement ELSE statement

   42 iteration_stmt: WHILE LPAREN expression RPAREN statement

   43 return_stmt: ID SEMI
   44            | RETURN error
   45            | RETURN expression ERROR
   46            | RETURN SEMI
   47            | RETURN expression SEMI

   48 expression: var ASSIGN expression
   49           | simple_expression

   50 var: ID

   51 $@8: /* empty */

   52 var: ID $@8 LSQ expression RSQ

   53 simple_expression: additive_expression LT additive_expression
   54                  | additive_expression LTEQ additive_expression
   55                  | additive_expression GT additive_expression
   56                  | additive_expression GTEQ additive_expression
   57                  | additive_expression EQ additive_expression
   58                  | additive_expression NEQ additive_expression
   59                  | additive_expression

   60 additive_expression: additive_expression PLUS term
   61                    | additive_expression MINUS term
   62                    | term

   63 term: term TIMES factor
   64     | term OVER factor
   65     | factor

   66 factor: LPAREN expression RPAREN
   67       | var
   68       | call
   69       | NUM

   70 $@9: /* empty */

   71 call: ID $@9 LPAREN args RPAREN

   72 args: /* empty */
   73     | arg_list

   74 arg_list: arg_list COMMA expression
   75         | expression


Terminals, with rules where they appear

$end (0) 0
error (256) 7 16 44
IF (258) 40 41
ELSE (259) 41
INT (260) 13
RETURN (261) 44 45 46 47
VOID (262) 14 21
WHILE (263) 42
ASSIGN (264) 48
EQ (265) 57
LT (266) 53
LTEQ (267) 54
GT (268) 55
GTEQ (269) 56
NEQ (270) 58
PLUS (271) 60
MINUS (272) 61
TIMES (273) 63
OVER (274) 64
LPAREN (275) 16 18 40 41 42 66 71
RPAREN (276) 16 18 40 41 42 66 71
LSQ (277) 12 27 52
RSQ (278) 12 27 52
LCURLY (279) 28
RCURLY (280) 28
COMMA (281) 23 74
SEMI (282) 7 9 12 38 39 43 46 47
ID (283) 7 9 12 16 18 25 27 43 50 52 71
NUM (284) 12 69
ERROR (285) 45


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
program (32)
    on left: 1, on right: 0
declaration_list (33)
    on left: 2 3, on right: 1 2
declaration (34)
    on left: 4 5, on right: 2 3
var_declaration (35)
    on left: 7 9 12, on right: 4 30
$@1 (36)
    on left: 6, on right: 7
$@2 (37)
    on left: 8, on right: 9
$@3 (38)
    on left: 10, on right: 12
$@4 (39)
    on left: 11, on right: 12
type_specifier (40)
    on left: 13 14, on right: 9 12 18 25 27
fun_declaration (41)
    on left: 16 18, on right: 5
$@5 (42)
    on left: 15, on right: 16
$@6 (43)
    on left: 17, on right: 18
params (44)
    on left: 19 20 21, on right: 16 18
param_list (45)
    on left: 22 23 24, on right: 20 22 23
param (46)
    on left: 25 27, on right: 22 23 24
$@7 (47)
    on left: 26, on right: 27
compound_stmt (48)
    on left: 28, on right: 16 18 34
local_declarations (49)
    on left: 29 30, on right: 28 30
statement_list (50)
    on left: 31 32, on right: 28 32
statement (51)
    on left: 33 34 35 36 37, on right: 32 40 41 42
expression_stmt (52)
    on left: 38 39, on right: 33
selection_stmt (53)
    on left: 40 41, on right: 35
iteration_stmt (54)
    on left: 42, on right: 36
return_stmt (55)
    on left: 43 44 45 46 47, on right: 37
expression (56)
    on left: 48 49, on right: 38 40 41 42 45 47 48 52 66 74 75
var (57)
    on left: 50 52, on right: 48 67
$@8 (58)
    on left: 51, on right: 52
simple_expression (59)
    on left: 53 54 55 56 57 58 59, on right: 49
additive_expression (60)
    on left: 60 61 62, on right: 53 54 55 56 57 58 59 60 61
term (61)
    on left: 63 64 65, on right: 60 61 62 63 64
factor (62)
    on left: 66 67 68 69, on right: 63 64 65
call (63)
    on left: 71, on right: 68
$@9 (64)
    on left: 70, on right: 71
args (65)
    on left: 72 73, on right: 71
arg_list (66)
    on left: 74 75, on right: 73 74


state 0

    0 $accept: . program $end

    error  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    program           go to state 4
    declaration_list  go to state 5
    declaration       go to state 6
    var_declaration   go to state 7
    type_specifier    go to state 8
    fun_declaration   go to state 9


state 1

    7 var_declaration: error . ID $@1 SEMI
   16 fun_declaration: error . ID $@5 LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 10


state 2

   13 type_specifier: INT .

    $default  reduce using rule 13 (type_specifier)


state 3

   14 type_specifier: VOID .

    $default  reduce using rule 14 (type_specifier)


state 4

    0 $accept: program . $end

    $end  shift, and go to state 11


state 5

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    error  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    $end  reduce using rule 1 (program)

    declaration      go to state 12
    var_declaration  go to state 7
    type_specifier   go to state 8
    fun_declaration  go to state 9


state 6

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


state 7

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


state 8

    9 var_declaration: type_specifier . ID $@2 SEMI
   12                | type_specifier . ID $@3 LSQ NUM $@4 RSQ SEMI
   18 fun_declaration: type_specifier . ID $@6 LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 13


state 9

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


state 10

    7 var_declaration: error ID . $@1 SEMI
   16 fun_declaration: error ID . $@5 LPAREN params RPAREN compound_stmt

    LPAREN    reduce using rule 15 ($@5)
    $default  reduce using rule 6 ($@1)

    $@1  go to state 14
    $@5  go to state 15


state 11

    0 $accept: program $end .

    $default  accept


state 12

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


state 13

    9 var_declaration: type_specifier ID . $@2 SEMI
   12                | type_specifier ID . $@3 LSQ NUM $@4 RSQ SEMI
   18 fun_declaration: type_specifier ID . $@6 LPAREN params RPAREN compound_stmt

    LPAREN    reduce using rule 17 ($@6)
    LSQ       reduce using rule 10 ($@3)
    $default  reduce using rule 8 ($@2)

    $@2  go to state 16
    $@3  go to state 17
    $@6  go to state 18


state 14

    7 var_declaration: error ID $@1 . SEMI

    SEMI  shift, and go to state 19


state 15

   16 fun_declaration: error ID $@5 . LPAREN params RPAREN compound_stmt

    LPAREN  shift, and go to state 20


state 16

    9 var_declaration: type_specifier ID $@2 . SEMI

    SEMI  shift, and go to state 21


state 17

   12 var_declaration: type_specifier ID $@3 . LSQ NUM $@4 RSQ SEMI

    LSQ  shift, and go to state 22


state 18

   18 fun_declaration: type_specifier ID $@6 . LPAREN params RPAREN compound_stmt

    LPAREN  shift, and go to state 23


state 19

    7 var_declaration: error ID $@1 SEMI .

    $default  reduce using rule 7 (var_declaration)


state 20

   16 fun_declaration: error ID $@5 LPAREN . params RPAREN compound_stmt

    INT   shift, and go to state 2
    VOID  shift, and go to state 24

    $default  reduce using rule 19 (params)

    type_specifier  go to state 25
    params          go to state 26
    param_list      go to state 27
    param           go to state 28


state 21

    9 var_declaration: type_specifier ID $@2 SEMI .

    $default  reduce using rule 9 (var_declaration)


state 22

   12 var_declaration: type_specifier ID $@3 LSQ . NUM $@4 RSQ SEMI

    NUM  shift, and go to state 29


state 23

   18 fun_declaration: type_specifier ID $@6 LPAREN . params RPAREN compound_stmt

    INT   shift, and go to state 2
    VOID  shift, and go to state 24

    $default  reduce using rule 19 (params)

    type_specifier  go to state 25
    params          go to state 30
    param_list      go to state 27
    param           go to state 28


state 24

   14 type_specifier: VOID .
   21 params: VOID .

    RPAREN    reduce using rule 21 (params)
    $default  reduce using rule 14 (type_specifier)


state 25

   25 param: type_specifier . ID
   27      | type_specifier . ID $@7 LSQ RSQ

    ID  shift, and go to state 31


state 26

   16 fun_declaration: error ID $@5 LPAREN params . RPAREN compound_stmt

    RPAREN  shift, and go to state 32


state 27

   20 params: param_list .
   22 param_list: param_list . param
   23           | param_list . COMMA param

    INT    shift, and go to state 2
    VOID   shift, and go to state 3
    COMMA  shift, and go to state 33

    $default  reduce using rule 20 (params)

    type_specifier  go to state 25
    param           go to state 34


state 28

   24 param_list: param .

    $default  reduce using rule 24 (param_list)


state 29

   12 var_declaration: type_specifier ID $@3 LSQ NUM . $@4 RSQ SEMI

    $default  reduce using rule 11 ($@4)

    $@4  go to state 35


state 30

   18 fun_declaration: type_specifier ID $@6 LPAREN params . RPAREN compound_stmt

    RPAREN  shift, and go to state 36


state 31

   25 param: type_specifier ID .
   27      | type_specifier ID . $@7 LSQ RSQ

    LSQ       reduce using rule 26 ($@7)
    $default  reduce using rule 25 (param)

    $@7  go to state 37


state 32

   16 fun_declaration: error ID $@5 LPAREN params RPAREN . compound_stmt

    LCURLY  shift, and go to state 38

    compound_stmt  go to state 39


state 33

   23 param_list: param_list COMMA . param

    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    type_specifier  go to state 25
    param           go to state 40


state 34

   22 param_list: param_list param .

    $default  reduce using rule 22 (param_list)


state 35

   12 var_declaration: type_specifier ID $@3 LSQ NUM $@4 . RSQ SEMI

    RSQ  shift, and go to state 41


state 36

   18 fun_declaration: type_specifier ID $@6 LPAREN params RPAREN . compound_stmt

    LCURLY  shift, and go to state 38

    compound_stmt  go to state 42


state 37

   27 param: type_specifier ID $@7 . LSQ RSQ

    LSQ  shift, and go to state 43


state 38

   28 compound_stmt: LCURLY . local_declarations statement_list RCURLY

    $default  reduce using rule 29 (local_declarations)

    local_declarations  go to state 44


state 39

   16 fun_declaration: error ID $@5 LPAREN params RPAREN compound_stmt .

    $default  reduce using rule 16 (fun_declaration)


state 40

   23 param_list: param_list COMMA param .

    $default  reduce using rule 23 (param_list)


state 41

   12 var_declaration: type_specifier ID $@3 LSQ NUM $@4 RSQ . SEMI

    SEMI  shift, and go to state 45


state 42

   18 fun_declaration: type_specifier ID $@6 LPAREN params RPAREN compound_stmt .

    $default  reduce using rule 18 (fun_declaration)


state 43

   27 param: type_specifier ID $@7 LSQ . RSQ

    RSQ  shift, and go to state 46


state 44

   28 compound_stmt: LCURLY local_declarations . statement_list RCURLY
   30 local_declarations: local_declarations . var_declaration

    error  shift, and go to state 47
    INT    shift, and go to state 2
    VOID   shift, and go to state 3

    IF      reduce using rule 31 (statement_list)
    RETURN  reduce using rule 31 (statement_list)
    WHILE   reduce using rule 31 (statement_list)
    LPAREN  reduce using rule 31 (statement_list)
    LCURLY  reduce using rule 31 (statement_list)
    RCURLY  reduce using rule 31 (statement_list)
    SEMI    reduce using rule 31 (statement_list)
    ID      reduce using rule 31 (statement_list)
    NUM     reduce using rule 31 (statement_list)

    var_declaration  go to state 48
    type_specifier   go to state 49
    statement_list   go to state 50


state 45

   12 var_declaration: type_specifier ID $@3 LSQ NUM $@4 RSQ SEMI .

    $default  reduce using rule 12 (var_declaration)


state 46

   27 param: type_specifier ID $@7 LSQ RSQ .

    $default  reduce using rule 27 (param)


state 47

    7 var_declaration: error . ID $@1 SEMI

    ID  shift, and go to state 51


state 48

   30 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 30 (local_declarations)


state 49

    9 var_declaration: type_specifier . ID $@2 SEMI
   12                | type_specifier . ID $@3 LSQ NUM $@4 RSQ SEMI

    ID  shift, and go to state 52


state 50

   28 compound_stmt: LCURLY local_declarations statement_list . RCURLY
   32 statement_list: statement_list . statement

    IF      shift, and go to state 53
    RETURN  shift, and go to state 54
    WHILE   shift, and go to state 55
    LPAREN  shift, and go to state 56
    LCURLY  shift, and go to state 38
    RCURLY  shift, and go to state 57
    SEMI    shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60

    compound_stmt        go to state 61
    statement            go to state 62
    expression_stmt      go to state 63
    selection_stmt       go to state 64
    iteration_stmt       go to state 65
    return_stmt          go to state 66
    expression           go to state 67
    var                  go to state 68
    simple_expression    go to state 69
    additive_expression  go to state 70
    term                 go to state 71
    factor               go to state 72
    call                 go to state 73


state 51

    7 var_declaration: error ID . $@1 SEMI

    $default  reduce using rule 6 ($@1)

    $@1  go to state 14


state 52

    9 var_declaration: type_specifier ID . $@2 SEMI
   12                | type_specifier ID . $@3 LSQ NUM $@4 RSQ SEMI

    LSQ       reduce using rule 10 ($@3)
    $default  reduce using rule 8 ($@2)

    $@2  go to state 16
    $@3  go to state 17


state 53

   40 selection_stmt: IF . LPAREN expression RPAREN statement
   41               | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 74


state 54

   44 return_stmt: RETURN . error
   45            | RETURN . expression ERROR
   46            | RETURN . SEMI
   47            | RETURN . expression SEMI

    error   shift, and go to state 75
    LPAREN  shift, and go to state 56
    SEMI    shift, and go to state 76
    ID      shift, and go to state 77
    NUM     shift, and go to state 60

    expression           go to state 78
    var                  go to state 68
    simple_expression    go to state 69
    additive_expression  go to state 70
    term                 go to state 71
    factor               go to state 72
    call                 go to state 73


state 55

   42 iteration_stmt: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 79


state 56

   66 factor: LPAREN . expression RPAREN

    LPAREN  shift, and go to state 56
    ID      shift, and go to state 77
    NUM     shift, and go to state 60

    expression           go to state 80
    var                  go to state 68
    simple_expression    go to state 69
    additive_expression  go to state 70
    term                 go to state 71
    factor               go to state 72
    call                 go to state 73


state 57

   28 compound_stmt: LCURLY local_declarations statement_list RCURLY .

    $default  reduce using rule 28 (compound_stmt)


state 58

   39 expression_stmt: SEMI .

    $default  reduce using rule 39 (expression_stmt)


state 59

   43 return_stmt: ID . SEMI
   50 var: ID .
   52    | ID . $@8 LSQ expression RSQ
   71 call: ID . $@9 LPAREN args RPAREN

    SEMI  shift, and go to state 81

    LPAREN    reduce using rule 70 ($@9)
    LSQ       reduce using rule 51 ($@8)
    SEMI      [reduce using rule 50 (var)]
    $default  reduce using rule 50 (var)

    $@8  go to state 82
    $@9  go to state 83


state 60

   69 factor: NUM .

    $default  reduce using rule 69 (factor)


state 61

   34 statement: compound_stmt .

    $default  reduce using rule 34 (statement)


state 62

   32 statement_list: statement_list statement .

    $default  reduce using rule 32 (statement_list)


state 63

   33 statement: expression_stmt .

    $default  reduce using rule 33 (statement)


state 64

   35 statement: selection_stmt .

    $default  reduce using rule 35 (statement)


state 65

   36 statement: iteration_stmt .

    $default  reduce using rule 36 (statement)


state 66

   37 statement: return_stmt .

    $default  reduce using rule 37 (statement)


state 67

   38 expression_stmt: expression . SEMI

    SEMI  shift, and go to state 84


state 68

   48 expression: var . ASSIGN expression
   67 factor: var .

    ASSIGN  shift, and go to state 85

    $default  reduce using rule 67 (factor)


state 69

   49 expression: simple_expression .

    $default  reduce using rule 49 (expression)


state 70

   53 simple_expression: additive_expression . LT additive_expression
   54                  | additive_expression . LTEQ additive_expression
   55                  | additive_expression . GT additive_expression
   56                  | additive_expression . GTEQ additive_expression
   57                  | additive_expression . EQ additive_expression
   58                  | additive_expression . NEQ additive_expression
   59                  | additive_expression .
   60 additive_expression: additive_expression . PLUS term
   61                    | additive_expression . MINUS term

    EQ     shift, and go to state 86
    LT     shift, and go to state 87
    LTEQ   shift, and go to state 88
    GT     shift, and go to state 89
    GTEQ   shift, and go to state 90
    NEQ    shift, and go to state 91
    PLUS   shift, and go to state 92
    MINUS  shift, and go to state 93

    $default  reduce using rule 59 (simple_expression)


state 71

   62 additive_expression: term .
   63 term: term . TIMES factor
   64     | term . OVER factor

    TIMES  shift, and go to state 94
    OVER   shift, and go to state 95

    $default  reduce using rule 62 (additive_expression)


state 72

   65 term: factor .

    $default  reduce using rule 65 (term)


state 73

   68 factor: call .

    $default  reduce using rule 68 (factor)


state 74

   40 selection_stmt: IF LPAREN . expression RPAREN statement
   41               | IF LPAREN . expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 56
    ID      shift, and go to state 77
    NUM     shift, and go to state 60

    expression           go to state 96
    var                  go to state 68
    simple_expression    go to state 69
    additive_expression  go to state 70
    term                 go to state 71
    factor               go to state 72
    call                 go to state 73


state 75

   44 return_stmt: RETURN error .

    $default  reduce using rule 44 (return_stmt)


state 76

   46 return_stmt: RETURN SEMI .

    $default  reduce using rule 46 (return_stmt)


state 77

   50 var: ID .
   52    | ID . $@8 LSQ expression RSQ
   71 call: ID . $@9 LPAREN args RPAREN

    LPAREN    reduce using rule 70 ($@9)
    LSQ       reduce using rule 51 ($@8)
    $default  reduce using rule 50 (var)

    $@8  go to state 82
    $@9  go to state 83


state 78

   45 return_stmt: RETURN expression . ERROR
   47            | RETURN expression . SEMI

    SEMI   shift, and go to state 97
    ERROR  shift, and go to state 98


state 79

   42 iteration_stmt: WHILE LPAREN . expression RPAREN statement

    LPAREN  shift, and go to state 56
    ID      shift, and go to state 77
    NUM     shift, and go to state 60

    expression           go to state 99
    var                  go to state 68
    simple_expression    go to state 69
    additive_expression  go to state 70
    term                 go to state 71
    factor               go to state 72
    call                 go to state 73


state 80

   66 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 100


state 81

   43 return_stmt: ID SEMI .

    $default  reduce using rule 43 (return_stmt)


state 82

   52 var: ID $@8 . LSQ expression RSQ

    LSQ  shift, and go to state 101


state 83

   71 call: ID $@9 . LPAREN args RPAREN

    LPAREN  shift, and go to state 102


state 84

   38 expression_stmt: expression SEMI .

    $default  reduce using rule 38 (expression_stmt)


state 85

   48 expression: var ASSIGN . expression

    LPAREN  shift, and go to state 56
    ID      shift, and go to state 77
    NUM     shift, and go to state 60

    expression           go to state 103
    var                  go to state 68
    simple_expression    go to state 69
    additive_expression  go to state 70
    term                 go to state 71
    factor               go to state 72
    call                 go to state 73


state 86

   57 simple_expression: additive_expression EQ . additive_expression

    LPAREN  shift, and go to state 56
    ID      shift, and go to state 77
    NUM     shift, and go to state 60

    var                  go to state 104
    additive_expression  go to state 105
    term                 go to state 71
    factor               go to state 72
    call                 go to state 73


state 87

   53 simple_expression: additive_expression LT . additive_expression

    LPAREN  shift, and go to state 56
    ID      shift, and go to state 77
    NUM     shift, and go to state 60

    var                  go to state 104
    additive_expression  go to state 106
    term                 go to state 71
    factor               go to state 72
    call                 go to state 73


state 88

   54 simple_expression: additive_expression LTEQ . additive_expression

    LPAREN  shift, and go to state 56
    ID      shift, and go to state 77
    NUM     shift, and go to state 60

    var                  go to state 104
    additive_expression  go to state 107
    term                 go to state 71
    factor               go to state 72
    call                 go to state 73


state 89

   55 simple_expression: additive_expression GT . additive_expression

    LPAREN  shift, and go to state 56
    ID      shift, and go to state 77
    NUM     shift, and go to state 60

    var                  go to state 104
    additive_expression  go to state 108
    term                 go to state 71
    factor               go to state 72
    call                 go to state 73


state 90

   56 simple_expression: additive_expression GTEQ . additive_expression

    LPAREN  shift, and go to state 56
    ID      shift, and go to state 77
    NUM     shift, and go to state 60

    var                  go to state 104
    additive_expression  go to state 109
    term                 go to state 71
    factor               go to state 72
    call                 go to state 73


state 91

   58 simple_expression: additive_expression NEQ . additive_expression

    LPAREN  shift, and go to state 56
    ID      shift, and go to state 77
    NUM     shift, and go to state 60

    var                  go to state 104
    additive_expression  go to state 110
    term                 go to state 71
    factor               go to state 72
    call                 go to state 73


state 92

   60 additive_expression: additive_expression PLUS . term

    LPAREN  shift, and go to state 56
    ID      shift, and go to state 77
    NUM     shift, and go to state 60

    var     go to state 104
    term    go to state 111
    factor  go to state 72
    call    go to state 73


state 93

   61 additive_expression: additive_expression MINUS . term

    LPAREN  shift, and go to state 56
    ID      shift, and go to state 77
    NUM     shift, and go to state 60

    var     go to state 104
    term    go to state 112
    factor  go to state 72
    call    go to state 73


state 94

   63 term: term TIMES . factor

    LPAREN  shift, and go to state 56
    ID      shift, and go to state 77
    NUM     shift, and go to state 60

    var     go to state 104
    factor  go to state 113
    call    go to state 73


state 95

   64 term: term OVER . factor

    LPAREN  shift, and go to state 56
    ID      shift, and go to state 77
    NUM     shift, and go to state 60

    var     go to state 104
    factor  go to state 114
    call    go to state 73


state 96

   40 selection_stmt: IF LPAREN expression . RPAREN statement
   41               | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 115


state 97

   47 return_stmt: RETURN expression SEMI .

    $default  reduce using rule 47 (return_stmt)


state 98

   45 return_stmt: RETURN expression ERROR .

    $default  reduce using rule 45 (return_stmt)


state 99

   42 iteration_stmt: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 116


state 100

   66 factor: LPAREN expression RPAREN .

    $default  reduce using rule 66 (factor)


state 101

   52 var: ID $@8 LSQ . expression RSQ

    LPAREN  shift, and go to state 56
    ID      shift, and go to state 77
    NUM     shift, and go to state 60

    expression           go to state 117
    var                  go to state 68
    simple_expression    go to state 69
    additive_expression  go to state 70
    term                 go to state 71
    factor               go to state 72
    call                 go to state 73


state 102

   71 call: ID $@9 LPAREN . args RPAREN

    LPAREN  shift, and go to state 56
    ID      shift, and go to state 77
    NUM     shift, and go to state 60

    $default  reduce using rule 72 (args)

    expression           go to state 118
    var                  go to state 68
    simple_expression    go to state 69
    additive_expression  go to state 70
    term                 go to state 71
    factor               go to state 72
    call                 go to state 73
    args                 go to state 119
    arg_list             go to state 120


state 103

   48 expression: var ASSIGN expression .

    $default  reduce using rule 48 (expression)


state 104

   67 factor: var .

    $default  reduce using rule 67 (factor)


state 105

   57 simple_expression: additive_expression EQ additive_expression .
   60 additive_expression: additive_expression . PLUS term
   61                    | additive_expression . MINUS term

    PLUS   shift, and go to state 92
    MINUS  shift, and go to state 93

    $default  reduce using rule 57 (simple_expression)


state 106

   53 simple_expression: additive_expression LT additive_expression .
   60 additive_expression: additive_expression . PLUS term
   61                    | additive_expression . MINUS term

    PLUS   shift, and go to state 92
    MINUS  shift, and go to state 93

    $default  reduce using rule 53 (simple_expression)


state 107

   54 simple_expression: additive_expression LTEQ additive_expression .
   60 additive_expression: additive_expression . PLUS term
   61                    | additive_expression . MINUS term

    PLUS   shift, and go to state 92
    MINUS  shift, and go to state 93

    $default  reduce using rule 54 (simple_expression)


state 108

   55 simple_expression: additive_expression GT additive_expression .
   60 additive_expression: additive_expression . PLUS term
   61                    | additive_expression . MINUS term

    PLUS   shift, and go to state 92
    MINUS  shift, and go to state 93

    $default  reduce using rule 55 (simple_expression)


state 109

   56 simple_expression: additive_expression GTEQ additive_expression .
   60 additive_expression: additive_expression . PLUS term
   61                    | additive_expression . MINUS term

    PLUS   shift, and go to state 92
    MINUS  shift, and go to state 93

    $default  reduce using rule 56 (simple_expression)


state 110

   58 simple_expression: additive_expression NEQ additive_expression .
   60 additive_expression: additive_expression . PLUS term
   61                    | additive_expression . MINUS term

    PLUS   shift, and go to state 92
    MINUS  shift, and go to state 93

    $default  reduce using rule 58 (simple_expression)


state 111

   60 additive_expression: additive_expression PLUS term .
   63 term: term . TIMES factor
   64     | term . OVER factor

    TIMES  shift, and go to state 94
    OVER   shift, and go to state 95

    $default  reduce using rule 60 (additive_expression)


state 112

   61 additive_expression: additive_expression MINUS term .
   63 term: term . TIMES factor
   64     | term . OVER factor

    TIMES  shift, and go to state 94
    OVER   shift, and go to state 95

    $default  reduce using rule 61 (additive_expression)


state 113

   63 term: term TIMES factor .

    $default  reduce using rule 63 (term)


state 114

   64 term: term OVER factor .

    $default  reduce using rule 64 (term)


state 115

   40 selection_stmt: IF LPAREN expression RPAREN . statement
   41               | IF LPAREN expression RPAREN . statement ELSE statement

    IF      shift, and go to state 53
    RETURN  shift, and go to state 54
    WHILE   shift, and go to state 55
    LPAREN  shift, and go to state 56
    LCURLY  shift, and go to state 38
    SEMI    shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60

    compound_stmt        go to state 61
    statement            go to state 121
    expression_stmt      go to state 63
    selection_stmt       go to state 64
    iteration_stmt       go to state 65
    return_stmt          go to state 66
    expression           go to state 67
    var                  go to state 68
    simple_expression    go to state 69
    additive_expression  go to state 70
    term                 go to state 71
    factor               go to state 72
    call                 go to state 73


state 116

   42 iteration_stmt: WHILE LPAREN expression RPAREN . statement

    IF      shift, and go to state 53
    RETURN  shift, and go to state 54
    WHILE   shift, and go to state 55
    LPAREN  shift, and go to state 56
    LCURLY  shift, and go to state 38
    SEMI    shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60

    compound_stmt        go to state 61
    statement            go to state 122
    expression_stmt      go to state 63
    selection_stmt       go to state 64
    iteration_stmt       go to state 65
    return_stmt          go to state 66
    expression           go to state 67
    var                  go to state 68
    simple_expression    go to state 69
    additive_expression  go to state 70
    term                 go to state 71
    factor               go to state 72
    call                 go to state 73


state 117

   52 var: ID $@8 LSQ expression . RSQ

    RSQ  shift, and go to state 123


state 118

   75 arg_list: expression .

    $default  reduce using rule 75 (arg_list)


state 119

   71 call: ID $@9 LPAREN args . RPAREN

    RPAREN  shift, and go to state 124


state 120

   73 args: arg_list .
   74 arg_list: arg_list . COMMA expression

    COMMA  shift, and go to state 125

    $default  reduce using rule 73 (args)


state 121

   40 selection_stmt: IF LPAREN expression RPAREN statement .
   41               | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 126

    ELSE      [reduce using rule 40 (selection_stmt)]
    $default  reduce using rule 40 (selection_stmt)


state 122

   42 iteration_stmt: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 42 (iteration_stmt)


state 123

   52 var: ID $@8 LSQ expression RSQ .

    $default  reduce using rule 52 (var)


state 124

   71 call: ID $@9 LPAREN args RPAREN .

    $default  reduce using rule 71 (call)


state 125

   74 arg_list: arg_list COMMA . expression

    LPAREN  shift, and go to state 56
    ID      shift, and go to state 77
    NUM     shift, and go to state 60

    expression           go to state 127
    var                  go to state 68
    simple_expression    go to state 69
    additive_expression  go to state 70
    term                 go to state 71
    factor               go to state 72
    call                 go to state 73


state 126

   41 selection_stmt: IF LPAREN expression RPAREN statement ELSE . statement

    IF      shift, and go to state 53
    RETURN  shift, and go to state 54
    WHILE   shift, and go to state 55
    LPAREN  shift, and go to state 56
    LCURLY  shift, and go to state 38
    SEMI    shift, and go to state 58
    ID      shift, and go to state 59
    NUM     shift, and go to state 60

    compound_stmt        go to state 61
    statement            go to state 128
    expression_stmt      go to state 63
    selection_stmt       go to state 64
    iteration_stmt       go to state 65
    return_stmt          go to state 66
    expression           go to state 67
    var                  go to state 68
    simple_expression    go to state 69
    additive_expression  go to state 70
    term                 go to state 71
    factor               go to state 72
    call                 go to state 73


state 127

   74 arg_list: arg_list COMMA expression .

    $default  reduce using rule 74 (arg_list)


state 128

   41 selection_stmt: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 41 (selection_stmt)

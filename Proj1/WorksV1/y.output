Terminals unused in grammar

   ERROR


State 104 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 $@1: /* empty */

    7 var_declaration: type_specifier ID $@1 SEMI
    8                | type_specifier ID LSQ NUM RSQ SEMI

    9 type_specifier: INT
   10               | VOID

   11 $@2: /* empty */

   12 fun_declaration: type_specifier ID $@2 LPAREN params RPAREN compound_stmt

   13 params: param_list
   14       | VOID

   15 param_list: param_list COMMA param
   16           | param

   17 param: type_specifier ID

   18 $@3: /* empty */

   19 param: type_specifier ID $@3 LSQ RSQ

   20 compound_stmt: LCURLY local_declarations statement_list RCURLY

   21 local_declarations: /* empty */
   22                   | local_declarations var_declaration

   23 statement_list: /* empty */
   24               | statement_list statement

   25 statement: expression_stmt
   26          | compound_stmt
   27          | selection_stmt
   28          | iteration_stmt
   29          | return_stmt

   30 expression_stmt: expression SEMI
   31                | SEMI

   32 selection_stmt: IF LPAREN expression RPAREN statement
   33               | IF LPAREN expression RPAREN statement ELSE statement

   34 iteration_stmt: WHILE LPAREN expression RPAREN statement

   35 return_stmt: RETURN SEMI
   36            | RETURN expression SEMI

   37 expression: var ASSIGN expression
   38           | simple_expression

   39 var: ID
   40    | ID LSQ expression RSQ

   41 simple_expression: additive_expression LT additive_expression
   42                  | additive_expression LTEQ additive_expression
   43                  | additive_expression GT additive_expression
   44                  | additive_expression GTEQ additive_expression
   45                  | additive_expression EQ additive_expression
   46                  | additive_expression NEQ additive_expression
   47                  | additive_expression

   48 additive_expression: additive_expression PLUS term
   49                    | additive_expression MINUS term
   50                    | term

   51 term: term TIMES factor
   52     | term OVER factor
   53     | factor

   54 factor: LPAREN expression RPAREN
   55       | var
   56       | call
   57       | NUM

   58 call: ID LPAREN args RPAREN

   59 args: /* empty */
   60     | arg_list

   61 arg_list: arg_list COMMA expression
   62         | expression


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 32 33
ELSE (259) 33
INT (260) 9
RETURN (261) 35 36
VOID (262) 10 14
WHILE (263) 34
ASSIGN (264) 37
EQ (265) 45
LT (266) 41
LTEQ (267) 42
GT (268) 43
GTEQ (269) 44
NEQ (270) 46
PLUS (271) 48
MINUS (272) 49
TIMES (273) 51
OVER (274) 52
LPAREN (275) 12 32 33 34 54 58
RPAREN (276) 12 32 33 34 54 58
LSQ (277) 8 19 40
RSQ (278) 8 19 40
LCURLY (279) 20
RCURLY (280) 20
COMMA (281) 15 61
SEMI (282) 7 8 30 31 35 36
ID (283) 7 8 12 17 19 39 40 58
NUM (284) 8 57
ERROR (285)


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
program (32)
    on left: 1, on right: 0
declaration_list (33)
    on left: 2 3, on right: 1 2
declaration (34)
    on left: 4 5, on right: 2 3
var_declaration (35)
    on left: 7 8, on right: 4 22
$@1 (36)
    on left: 6, on right: 7
type_specifier (37)
    on left: 9 10, on right: 7 8 12 17 19
fun_declaration (38)
    on left: 12, on right: 5
$@2 (39)
    on left: 11, on right: 12
params (40)
    on left: 13 14, on right: 12
param_list (41)
    on left: 15 16, on right: 13 15
param (42)
    on left: 17 19, on right: 15 16
$@3 (43)
    on left: 18, on right: 19
compound_stmt (44)
    on left: 20, on right: 12 26
local_declarations (45)
    on left: 21 22, on right: 20 22
statement_list (46)
    on left: 23 24, on right: 20 24
statement (47)
    on left: 25 26 27 28 29, on right: 24 32 33 34
expression_stmt (48)
    on left: 30 31, on right: 25
selection_stmt (49)
    on left: 32 33, on right: 27
iteration_stmt (50)
    on left: 34, on right: 28
return_stmt (51)
    on left: 35 36, on right: 29
expression (52)
    on left: 37 38, on right: 30 32 33 34 36 37 40 54 61 62
var (53)
    on left: 39 40, on right: 37 55
simple_expression (54)
    on left: 41 42 43 44 45 46 47, on right: 38
additive_expression (55)
    on left: 48 49 50, on right: 41 42 43 44 45 46 47 48 49
term (56)
    on left: 51 52 53, on right: 48 49 50 51 52
factor (57)
    on left: 54 55 56 57, on right: 51 52 53
call (58)
    on left: 58, on right: 56
args (59)
    on left: 59 60, on right: 58
arg_list (60)
    on left: 61 62, on right: 60 61


state 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


state 1

    9 type_specifier: INT .

    $default  reduce using rule 9 (type_specifier)


state 2

   10 type_specifier: VOID .

    $default  reduce using rule 10 (type_specifier)


state 3

    0 $accept: program . $end

    $end  shift, and go to state 9


state 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


state 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


state 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


state 7

    7 var_declaration: type_specifier . ID $@1 SEMI
    8                | type_specifier . ID LSQ NUM RSQ SEMI
   12 fun_declaration: type_specifier . ID $@2 LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 11


state 8

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


state 9

    0 $accept: program $end .

    $default  accept


state 10

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


state 11

    7 var_declaration: type_specifier ID . $@1 SEMI
    8                | type_specifier ID . LSQ NUM RSQ SEMI
   12 fun_declaration: type_specifier ID . $@2 LPAREN params RPAREN compound_stmt

    LSQ  shift, and go to state 12

    LPAREN    reduce using rule 11 ($@2)
    $default  reduce using rule 6 ($@1)

    $@1  go to state 13
    $@2  go to state 14


state 12

    8 var_declaration: type_specifier ID LSQ . NUM RSQ SEMI

    NUM  shift, and go to state 15


state 13

    7 var_declaration: type_specifier ID $@1 . SEMI

    SEMI  shift, and go to state 16


state 14

   12 fun_declaration: type_specifier ID $@2 . LPAREN params RPAREN compound_stmt

    LPAREN  shift, and go to state 17


state 15

    8 var_declaration: type_specifier ID LSQ NUM . RSQ SEMI

    RSQ  shift, and go to state 18


state 16

    7 var_declaration: type_specifier ID $@1 SEMI .

    $default  reduce using rule 7 (var_declaration)


state 17

   12 fun_declaration: type_specifier ID $@2 LPAREN . params RPAREN compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 19

    type_specifier  go to state 20
    params          go to state 21
    param_list      go to state 22
    param           go to state 23


state 18

    8 var_declaration: type_specifier ID LSQ NUM RSQ . SEMI

    SEMI  shift, and go to state 24


state 19

   10 type_specifier: VOID .
   14 params: VOID .

    RPAREN    reduce using rule 14 (params)
    $default  reduce using rule 10 (type_specifier)


state 20

   17 param: type_specifier . ID
   19      | type_specifier . ID $@3 LSQ RSQ

    ID  shift, and go to state 25


state 21

   12 fun_declaration: type_specifier ID $@2 LPAREN params . RPAREN compound_stmt

    RPAREN  shift, and go to state 26


state 22

   13 params: param_list .
   15 param_list: param_list . COMMA param

    COMMA  shift, and go to state 27

    $default  reduce using rule 13 (params)


state 23

   16 param_list: param .

    $default  reduce using rule 16 (param_list)


state 24

    8 var_declaration: type_specifier ID LSQ NUM RSQ SEMI .

    $default  reduce using rule 8 (var_declaration)


state 25

   17 param: type_specifier ID .
   19      | type_specifier ID . $@3 LSQ RSQ

    LSQ       reduce using rule 18 ($@3)
    $default  reduce using rule 17 (param)

    $@3  go to state 28


state 26

   12 fun_declaration: type_specifier ID $@2 LPAREN params RPAREN . compound_stmt

    LCURLY  shift, and go to state 29

    compound_stmt  go to state 30


state 27

   15 param_list: param_list COMMA . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 20
    param           go to state 31


state 28

   19 param: type_specifier ID $@3 . LSQ RSQ

    LSQ  shift, and go to state 32


state 29

   20 compound_stmt: LCURLY . local_declarations statement_list RCURLY

    $default  reduce using rule 21 (local_declarations)

    local_declarations  go to state 33


state 30

   12 fun_declaration: type_specifier ID $@2 LPAREN params RPAREN compound_stmt .

    $default  reduce using rule 12 (fun_declaration)


state 31

   15 param_list: param_list COMMA param .

    $default  reduce using rule 15 (param_list)


state 32

   19 param: type_specifier ID $@3 LSQ . RSQ

    RSQ  shift, and go to state 34


state 33

   20 compound_stmt: LCURLY local_declarations . statement_list RCURLY
   22 local_declarations: local_declarations . var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 23 (statement_list)

    var_declaration  go to state 35
    type_specifier   go to state 36
    statement_list   go to state 37


state 34

   19 param: type_specifier ID $@3 LSQ RSQ .

    $default  reduce using rule 19 (param)


state 35

   22 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 22 (local_declarations)


state 36

    7 var_declaration: type_specifier . ID $@1 SEMI
    8                | type_specifier . ID LSQ NUM RSQ SEMI

    ID  shift, and go to state 38


state 37

   20 compound_stmt: LCURLY local_declarations statement_list . RCURLY
   24 statement_list: statement_list . statement

    IF      shift, and go to state 39
    RETURN  shift, and go to state 40
    WHILE   shift, and go to state 41
    LPAREN  shift, and go to state 42
    LCURLY  shift, and go to state 29
    RCURLY  shift, and go to state 43
    SEMI    shift, and go to state 44
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    compound_stmt        go to state 47
    statement            go to state 48
    expression_stmt      go to state 49
    selection_stmt       go to state 50
    iteration_stmt       go to state 51
    return_stmt          go to state 52
    expression           go to state 53
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


state 38

    7 var_declaration: type_specifier ID . $@1 SEMI
    8                | type_specifier ID . LSQ NUM RSQ SEMI

    LSQ  shift, and go to state 12

    $default  reduce using rule 6 ($@1)

    $@1  go to state 13


state 39

   32 selection_stmt: IF . LPAREN expression RPAREN statement
   33               | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 60


state 40

   35 return_stmt: RETURN . SEMI
   36            | RETURN . expression SEMI

    LPAREN  shift, and go to state 42
    SEMI    shift, and go to state 61
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    expression           go to state 62
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


state 41

   34 iteration_stmt: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 63


state 42

   54 factor: LPAREN . expression RPAREN

    LPAREN  shift, and go to state 42
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    expression           go to state 64
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


state 43

   20 compound_stmt: LCURLY local_declarations statement_list RCURLY .

    $default  reduce using rule 20 (compound_stmt)


state 44

   31 expression_stmt: SEMI .

    $default  reduce using rule 31 (expression_stmt)


state 45

   39 var: ID .
   40    | ID . LSQ expression RSQ
   58 call: ID . LPAREN args RPAREN

    LPAREN  shift, and go to state 65
    LSQ     shift, and go to state 66

    $default  reduce using rule 39 (var)


state 46

   57 factor: NUM .

    $default  reduce using rule 57 (factor)


state 47

   26 statement: compound_stmt .

    $default  reduce using rule 26 (statement)


state 48

   24 statement_list: statement_list statement .

    $default  reduce using rule 24 (statement_list)


state 49

   25 statement: expression_stmt .

    $default  reduce using rule 25 (statement)


state 50

   27 statement: selection_stmt .

    $default  reduce using rule 27 (statement)


state 51

   28 statement: iteration_stmt .

    $default  reduce using rule 28 (statement)


state 52

   29 statement: return_stmt .

    $default  reduce using rule 29 (statement)


state 53

   30 expression_stmt: expression . SEMI

    SEMI  shift, and go to state 67


state 54

   37 expression: var . ASSIGN expression
   55 factor: var .

    ASSIGN  shift, and go to state 68

    $default  reduce using rule 55 (factor)


state 55

   38 expression: simple_expression .

    $default  reduce using rule 38 (expression)


state 56

   41 simple_expression: additive_expression . LT additive_expression
   42                  | additive_expression . LTEQ additive_expression
   43                  | additive_expression . GT additive_expression
   44                  | additive_expression . GTEQ additive_expression
   45                  | additive_expression . EQ additive_expression
   46                  | additive_expression . NEQ additive_expression
   47                  | additive_expression .
   48 additive_expression: additive_expression . PLUS term
   49                    | additive_expression . MINUS term

    EQ     shift, and go to state 69
    LT     shift, and go to state 70
    LTEQ   shift, and go to state 71
    GT     shift, and go to state 72
    GTEQ   shift, and go to state 73
    NEQ    shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 47 (simple_expression)


state 57

   50 additive_expression: term .
   51 term: term . TIMES factor
   52     | term . OVER factor

    TIMES  shift, and go to state 77
    OVER   shift, and go to state 78

    $default  reduce using rule 50 (additive_expression)


state 58

   53 term: factor .

    $default  reduce using rule 53 (term)


state 59

   56 factor: call .

    $default  reduce using rule 56 (factor)


state 60

   32 selection_stmt: IF LPAREN . expression RPAREN statement
   33               | IF LPAREN . expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 42
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    expression           go to state 79
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


state 61

   35 return_stmt: RETURN SEMI .

    $default  reduce using rule 35 (return_stmt)


state 62

   36 return_stmt: RETURN expression . SEMI

    SEMI  shift, and go to state 80


state 63

   34 iteration_stmt: WHILE LPAREN . expression RPAREN statement

    LPAREN  shift, and go to state 42
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    expression           go to state 81
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


state 64

   54 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 82


state 65

   58 call: ID LPAREN . args RPAREN

    LPAREN  shift, and go to state 42
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    $default  reduce using rule 59 (args)

    expression           go to state 83
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    args                 go to state 84
    arg_list             go to state 85


state 66

   40 var: ID LSQ . expression RSQ

    LPAREN  shift, and go to state 42
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    expression           go to state 86
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


state 67

   30 expression_stmt: expression SEMI .

    $default  reduce using rule 30 (expression_stmt)


state 68

   37 expression: var ASSIGN . expression

    LPAREN  shift, and go to state 42
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    expression           go to state 87
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


state 69

   45 simple_expression: additive_expression EQ . additive_expression

    LPAREN  shift, and go to state 42
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    var                  go to state 88
    additive_expression  go to state 89
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


state 70

   41 simple_expression: additive_expression LT . additive_expression

    LPAREN  shift, and go to state 42
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    var                  go to state 88
    additive_expression  go to state 90
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


state 71

   42 simple_expression: additive_expression LTEQ . additive_expression

    LPAREN  shift, and go to state 42
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    var                  go to state 88
    additive_expression  go to state 91
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


state 72

   43 simple_expression: additive_expression GT . additive_expression

    LPAREN  shift, and go to state 42
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    var                  go to state 88
    additive_expression  go to state 92
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


state 73

   44 simple_expression: additive_expression GTEQ . additive_expression

    LPAREN  shift, and go to state 42
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    var                  go to state 88
    additive_expression  go to state 93
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


state 74

   46 simple_expression: additive_expression NEQ . additive_expression

    LPAREN  shift, and go to state 42
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    var                  go to state 88
    additive_expression  go to state 94
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


state 75

   48 additive_expression: additive_expression PLUS . term

    LPAREN  shift, and go to state 42
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    var     go to state 88
    term    go to state 95
    factor  go to state 58
    call    go to state 59


state 76

   49 additive_expression: additive_expression MINUS . term

    LPAREN  shift, and go to state 42
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    var     go to state 88
    term    go to state 96
    factor  go to state 58
    call    go to state 59


state 77

   51 term: term TIMES . factor

    LPAREN  shift, and go to state 42
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    var     go to state 88
    factor  go to state 97
    call    go to state 59


state 78

   52 term: term OVER . factor

    LPAREN  shift, and go to state 42
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    var     go to state 88
    factor  go to state 98
    call    go to state 59


state 79

   32 selection_stmt: IF LPAREN expression . RPAREN statement
   33               | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 99


state 80

   36 return_stmt: RETURN expression SEMI .

    $default  reduce using rule 36 (return_stmt)


state 81

   34 iteration_stmt: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 100


state 82

   54 factor: LPAREN expression RPAREN .

    $default  reduce using rule 54 (factor)


state 83

   62 arg_list: expression .

    $default  reduce using rule 62 (arg_list)


state 84

   58 call: ID LPAREN args . RPAREN

    RPAREN  shift, and go to state 101


state 85

   60 args: arg_list .
   61 arg_list: arg_list . COMMA expression

    COMMA  shift, and go to state 102

    $default  reduce using rule 60 (args)


state 86

   40 var: ID LSQ expression . RSQ

    RSQ  shift, and go to state 103


state 87

   37 expression: var ASSIGN expression .

    $default  reduce using rule 37 (expression)


state 88

   55 factor: var .

    $default  reduce using rule 55 (factor)


state 89

   45 simple_expression: additive_expression EQ additive_expression .
   48 additive_expression: additive_expression . PLUS term
   49                    | additive_expression . MINUS term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 45 (simple_expression)


state 90

   41 simple_expression: additive_expression LT additive_expression .
   48 additive_expression: additive_expression . PLUS term
   49                    | additive_expression . MINUS term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 41 (simple_expression)


state 91

   42 simple_expression: additive_expression LTEQ additive_expression .
   48 additive_expression: additive_expression . PLUS term
   49                    | additive_expression . MINUS term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 42 (simple_expression)


state 92

   43 simple_expression: additive_expression GT additive_expression .
   48 additive_expression: additive_expression . PLUS term
   49                    | additive_expression . MINUS term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 43 (simple_expression)


state 93

   44 simple_expression: additive_expression GTEQ additive_expression .
   48 additive_expression: additive_expression . PLUS term
   49                    | additive_expression . MINUS term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 44 (simple_expression)


state 94

   46 simple_expression: additive_expression NEQ additive_expression .
   48 additive_expression: additive_expression . PLUS term
   49                    | additive_expression . MINUS term

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76

    $default  reduce using rule 46 (simple_expression)


state 95

   48 additive_expression: additive_expression PLUS term .
   51 term: term . TIMES factor
   52     | term . OVER factor

    TIMES  shift, and go to state 77
    OVER   shift, and go to state 78

    $default  reduce using rule 48 (additive_expression)


state 96

   49 additive_expression: additive_expression MINUS term .
   51 term: term . TIMES factor
   52     | term . OVER factor

    TIMES  shift, and go to state 77
    OVER   shift, and go to state 78

    $default  reduce using rule 49 (additive_expression)


state 97

   51 term: term TIMES factor .

    $default  reduce using rule 51 (term)


state 98

   52 term: term OVER factor .

    $default  reduce using rule 52 (term)


state 99

   32 selection_stmt: IF LPAREN expression RPAREN . statement
   33               | IF LPAREN expression RPAREN . statement ELSE statement

    IF      shift, and go to state 39
    RETURN  shift, and go to state 40
    WHILE   shift, and go to state 41
    LPAREN  shift, and go to state 42
    LCURLY  shift, and go to state 29
    SEMI    shift, and go to state 44
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    compound_stmt        go to state 47
    statement            go to state 104
    expression_stmt      go to state 49
    selection_stmt       go to state 50
    iteration_stmt       go to state 51
    return_stmt          go to state 52
    expression           go to state 53
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


state 100

   34 iteration_stmt: WHILE LPAREN expression RPAREN . statement

    IF      shift, and go to state 39
    RETURN  shift, and go to state 40
    WHILE   shift, and go to state 41
    LPAREN  shift, and go to state 42
    LCURLY  shift, and go to state 29
    SEMI    shift, and go to state 44
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    compound_stmt        go to state 47
    statement            go to state 105
    expression_stmt      go to state 49
    selection_stmt       go to state 50
    iteration_stmt       go to state 51
    return_stmt          go to state 52
    expression           go to state 53
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


state 101

   58 call: ID LPAREN args RPAREN .

    $default  reduce using rule 58 (call)


state 102

   61 arg_list: arg_list COMMA . expression

    LPAREN  shift, and go to state 42
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    expression           go to state 106
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


state 103

   40 var: ID LSQ expression RSQ .

    $default  reduce using rule 40 (var)


state 104

   32 selection_stmt: IF LPAREN expression RPAREN statement .
   33               | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 107

    ELSE      [reduce using rule 32 (selection_stmt)]
    $default  reduce using rule 32 (selection_stmt)


state 105

   34 iteration_stmt: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 34 (iteration_stmt)


state 106

   61 arg_list: arg_list COMMA expression .

    $default  reduce using rule 61 (arg_list)


state 107

   33 selection_stmt: IF LPAREN expression RPAREN statement ELSE . statement

    IF      shift, and go to state 39
    RETURN  shift, and go to state 40
    WHILE   shift, and go to state 41
    LPAREN  shift, and go to state 42
    LCURLY  shift, and go to state 29
    SEMI    shift, and go to state 44
    ID      shift, and go to state 45
    NUM     shift, and go to state 46

    compound_stmt        go to state 47
    statement            go to state 108
    expression_stmt      go to state 49
    selection_stmt       go to state 50
    iteration_stmt       go to state 51
    return_stmt          go to state 52
    expression           go to state 53
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59


state 108

   33 selection_stmt: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 33 (selection_stmt)
